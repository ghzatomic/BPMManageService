package br.com.finchsolucoes.ominipage.omini;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;

/**
 * 
 * Classe responsï¿½vel por
 *
 * @since 21 de set de 2015 15:43:38
 * @author Luiz Gustavo O. Gutierrez <luizgutierrez@finchsolucoes.com.br>
 *
 */
public class JobRunnerOmniPage{
	private static String fileName;
	private static long currentTime;
	private static String pathParamters;

	public void runJob( long fileName ) {
		
		BufferedInputStream in         = null;
        BufferedInputStream procStdout = null;
        BufferedOutputStream out       = null;
        StringBuffer cmd               = null;
        Process proc                   = null;
		
		pathParamters = Constantes.PATH_JOB_OMNIPAGE + fileName + ".jpf";

		JobRunnerOmniPage.currentTime = fileName;
		JobRunnerOmniPage.fileName = String.valueOf( fileName );
		createJob();
		
	    //Attempt to connect
	    try {
	    	
	    	proc = Runtime.getRuntime().exec(new String(Constantes.PATH_JOB_RUNNER +" "+pathParamters));
            procStdout = new BufferedInputStream(proc.getInputStream());
            
	    } catch(Exception e) {
	        e.printStackTrace();
	    }
	}

	private static void createJob() {
		// Parametros para o criar o arquivo .JFP
		
		String pathFileOCR = Constantes.PATH_INPUT + fileName + ".pdf";
		String pathLog = Constantes.PATH_JOB_OMNIPAGE + fileName + ".xwf";
		String pathConDat1 = Constantes.PATH_JOB_OMNIPAGE + ( currentTime + 1 ) + ".dat";
		String pathConDat2 = Constantes.PATH_JOB_OMNIPAGE + ( currentTime + 2 ) + ".dat";

		// Converte as strings em hexadecimal
		JobRunnerOmniPage strToHex = new JobRunnerOmniPage();
		String hexNameJob = strToHex.convertStringToHex( Constantes.JOBNAME );
		String hexNameLog = strToHex.convertStringToHex( pathLog );
		String hexPathOCR = strToHex.convertStringToHex( pathFileOCR );
		String hexConDat1 = strToHex.convertStringToHex( pathConDat1 );
		String hexConDat2 = strToHex.convertStringToHex( pathConDat2 );
		String hexParamtersFileJPF = "2112100041004a6f6245786563506172616d7300211700004e004a6f6252756e6e696e67424d554948776e640023050026045a0002212100004e004a6f6252756e6e696e67424d746f4f50436f6e6e46696c654e616d650023a503" + hexConDat1 + "000002211b00004e004a6f6252756e6e696e67424d746f4f50436f6e6e494400230f02436f6e6e5f34354546364342390002211f000056004a6f6252756e6e696e67426172636f64655746466f6c6465727300250600000600000002211a00004e004a6f6252756e6e696e6744656c657465496e70757400a3010102211600004e004a6f6252756e6e696e674a6f624e616d6500231103" + hexNameJob + "000002211600004e004a6f6252756e6e696e674a6f6254797065002305000100000002212100004e004a6f6252756e6e696e674f50746f424d436f6e6e46696c654e616d650023a503" + hexConDat2 + "000002211b00004e004a6f6252756e6e696e674f50746f424d436f6e6e494400230f02436f6e6e5f34354546364342380002211800004e004a6f6252756e6e696e67506167654c696d6974002305002c01000002211600004e004a6f6252756e6e696e6752756e4d6f6465002305000000000002211700004e004a6f6252756e6e696e6753696c656e746c7900a3010102211b00004e004a6f6252756e6e696e6754656d70446f63756d656e7400c303000002211900004e004a6f6252756e6e696e67574646696c654e616d650023a503" + hexNameLog + "000002211b00004e004a6f6252756e6e696e675746466f6c6465725061746800238d0343003a005c00550073006500720073005c00410064006d0069006e006900730074007200610074006f0072005c0041007000700044006100740061005c0052006f0061006d0069006e0067005c005300630061006e0053006f00660074005c004f006d006e00690050006100670065002000310038005c0057006f0072006b0046006c006f0077005c00000002211b010056004a6f6252756e6e696e675746496e7075744974656d730025060100060000002107040056007630002506040005000000210900004e006b657930002315024a6f6257617463684974656d4261736555524c0002210900004e006b657931002311024a6f6257617463684974656d55524c0002210900004e0076616c300023150343003a005c0049006e007000750074005c00000002210900004e0076616c3100233703" + hexPathOCR + "000002020202";
		String hexLogFileXWF = "";

		try {
			// Cria arquivo.xwf o qual ï¿½ apenas um arquivo de log, mas ï¿½ necessï¿½rio para o funcionamento
			byte logbyte[] = hexStringToByteArray( hexLogFileXWF );
			OutputStream osLog = new BufferedOutputStream( new FileOutputStream( pathLog/*.replace("c:", Constantes.SERVER)*/ ) );
			osLog.write( logbyte );
			osLog.close();

			// Cria Arquivo.jpf o qual contem os parametros para a execuï¿½ï¿½o do JobRunner
			byte paramters[] = hexStringToByteArray( hexParamtersFileJPF );
			OutputStream osParamters = new BufferedOutputStream( new FileOutputStream( pathParamters/*.replace("c:", Constantes.SERVER)*/ ) );
			osParamters.write( paramters );
			osParamters.close();
		} catch ( Exception e ) {
			System.err.println( e );
		}
	}

	public String convertStringToHex( String str ) {
		char[ ] chars = str.toCharArray();
		StringBuffer hex = new StringBuffer();
		for ( int i = 0; i < chars.length; i++ ) {
			hex.append( Integer.toHexString( (int) chars[ i ] ) );
			hex.append( "00" );
		}
		return hex.toString();
	}

	public static byte[ ] hexStringToByteArray( String s ) {
		int len = s.length();
		byte[ ] data = new byte[ len / 2 ];
		for ( int i = 0; i < len; i += 2 ) {
			data[ i / 2 ] = (byte) ( ( Character.digit( s.charAt( i ), 16 ) << 4 ) + Character.digit( s.charAt( i + 1 ), 16 ) );
		}
		return data;
	}
}